Немного о библиотеке.
Сценарий использования библиотеки следующий:
	1) Сначала создается экземпляр стратегии - ISquare, 
	   реализованный для какой либо из заданных фигур:
		a) ISquare square = new CircleSquare() - для вычисления площади круга;
		b) ISquare square = new TriangleSquare() - для вычисления площади произвольного треугольника;

	2) Затем создается экземпляр контекста - Shape, соответствующие выбранному методу вычисления:
		a) Shape shape = new Circle(radius,square); 
			Конструктор класса Circle принимает два параметра:
				1) double radius - радиус окружности первым параметром;
				2) ISquare square - соответствующий фигуре экземпляр стратегии;

		b) Shape shape = new Triangle(firstSide,secondSide,thirdSide,square);
			Конструктор класса Triangle принимает четыре параметра:
				1) первые три из них типа double представляют собой длины сторон треугольника;
				2) ISquare square - соответствующий фигуре экземпляр стратегии;

	3) Запустить подсчет площади фигуры:
		shape.Execute();

	4) Получить результат. И в Случае треугольника можно проверить треугольник на прямоугольность. 
			Для этого определен класс TriangleChecker. 
			В данной реализации проверить треугольник на прямоугольность можно только для треугольника
			, площадь которого мы уже вычислили.
			Это связано с тем, что проверка осуществляется сравнением площадей треугольников: 
				полученного для некоторого треугольника и вычесленной для этого же треугольника
				, в предположении, что он прямоугольный. 

				Для этого нужно создать экземпляр TriangleChecker и вызвать метод TriangleIsRect():
					
					TriangleChecker triangleChecker = new TriangleChecker(shape);
					, где shape - экземпляр треугольника, для которого мы уже вычислили площадь;

Замечания.
	В классе подсчета площади круга реализована проверка радиуса на отрицательное значение;
	В классе подсчета площади треугольника реализована проверка длин сторон на отрицательные значения.
		Обе проверки вернуть нуль и выведут в консоль сообщение об ошибке.

	Класс проверки на прямоугольность треугольника можно использовать только для уже просчитанного треугольника.
		Иначе в консоль будет выведена информация о том, что треугольник не прямоугольный.
		Плюс проверка на треугольность фигуры и на наличие отрицательных значений длины сторон треугольника реализованы в классе TriangleSquare. 

Примеры:
	1) Подсчет площади круга:
	
		ISquare square = new CircleSquare();

		Shape shape = new Circle(3,square);
		shape.Execute(); - выведет в консоль площадь круга радиуса 3;

		shape = new Circle(-3,square);
		shape.Execute(); - выведет в консоль 0, так как радиус должен быть неотрицательным.

	2) Подсчет площади треугольника и проверка на прямоугольность:
		
		ISquare square = new TriangleSquare();

		Shape shape = new Triangle(5,5,8,square);
		shape.Execute(); - выведет в консоль 12

		TriangleChecker triangleChecker = new TriangleChecker(shape);
		triangleChecker.TriangleIsRect(); - выведет в консоль сообщение о "статусе прямоугольности" треугольника.

Заметка.
	Попробовал покрыть тестами методы классов. 
	Думаю, далеко не все покрыл и не все правильно. 
	Но это был первый раз, когда я взялся за тесты.
	Спасибо.
	С уважением, Николай.